var _user$project$Cliente$encodeCliente = function (c) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'nome',
				_1: _elm_lang$core$Json_Encode$string(c.nome)
			},
			_1: {ctor: '[]'}
		});
};
var _user$project$Cliente$Cliente = F2(
	function (a, b) {
		return {clienteId: a, nome: b};
	});
var _user$project$Cliente$decodeClientes = A2(
	_elm_lang$core$Json_Decode$field,
	'resp',
	_elm_lang$core$Json_Decode$list(
		A3(
			_elm_lang$core$Json_Decode$map2,
			_user$project$Cliente$Cliente,
			A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
			A2(_elm_lang$core$Json_Decode$field, 'nome', _elm_lang$core$Json_Decode$string))));
var _user$project$Cliente$Model = F3(
	function (a, b, c) {
		return {cliente: a, allCli: b, nome: c};
	});
var _user$project$Cliente$GetClientes = function (a) {
	return {ctor: 'GetClientes', _0: a};
};
var _user$project$Cliente$Sucesso = function (a) {
	return {ctor: 'Sucesso', _0: a};
};
var _user$project$Cliente$update = F2(
	function (msg, m) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Submit':
				return {
					ctor: '_Tuple2',
					_0: m,
					_1: A2(
						_elm_lang$http$Http$send,
						_user$project$Cliente$Sucesso,
						A3(
							_elm_lang$http$Http$post,
							'@{ClienteR}',
							_elm_lang$http$Http$jsonBody(
								_user$project$Cliente$encodeCliente(
									A2(_user$project$Cliente$Cliente, 0, m.nome))),
							A2(_elm_lang$core$Json_Decode$field, 'resp', _elm_lang$core$Json_Decode$int)))
				};
			case 'GetClientes':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							m,
							{allCli: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: m, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'ClienteNome':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						m,
						{nome: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Sucesso':
				return {ctor: '_Tuple2', _0: m, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {
					ctor: '_Tuple2',
					_0: m,
					_1: A2(
						_elm_lang$http$Http$send,
						_user$project$Cliente$GetClientes,
						A2(_elm_lang$http$Http$get, '@{ListClienteR}', _user$project$Cliente$decodeClientes))
				};
		}
	});
var _user$project$Cliente$Listagem = {ctor: 'Listagem'};
var _user$project$Cliente$Submit = {ctor: 'Submit'};
var _user$project$Cliente$ClienteNome = function (a) {
	return {ctor: 'ClienteNome', _0: a};
};
var _user$project$Cliente$view = function (model) {
	var trr = function (cli) {
		return A2(
			_elm_lang$html$Html$tr,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(cli.clienteId)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(cli.nome),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	};
	var thh = function (campo) {
		return A2(
			_elm_lang$html$Html$th,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(campo),
				_1: {ctor: '[]'}
			});
	};
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(_user$project$Cliente$ClienteNome),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Cliente$Submit),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Inserir'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$table,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$thead,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$tr,
										{ctor: '[]'},
										A2(
											_elm_lang$core$List$map,
											thh,
											{
												ctor: '::',
												_0: 'ID',
												_1: {
													ctor: '::',
													_0: 'nome',
													_1: {ctor: '[]'}
												}
											})),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tbody,
									{ctor: '[]'},
									A2(_elm_lang$core$List$map, trr, model.allCli)),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Cliente$main = _elm_lang$html$Html$program(
	{
		init: {
			ctor: '_Tuple2',
			_0: A3(
				_user$project$Cliente$Model,
				A2(_user$project$Cliente$Cliente, 0, ''),
				{ctor: '[]'},
				''),
			_1: A2(
				_elm_lang$http$Http$send,
				_user$project$Cliente$GetClientes,
				A2(_elm_lang$http$Http$get, '@{ListClienteR}', _user$project$Cliente$decodeClientes))
		},
		view: _user$project$Cliente$view,
		update: _user$project$Cliente$update,
		subscriptions: function (_p1) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
